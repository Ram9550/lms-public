pipeline {
    agent{
       label 'Docker_slave_server'
    }

    environment {

    DOCKERHUB_CREDENTIALS = credentials('Ram9550')
     registry = "Ram9550/backend-lms"
        registryCredential = 'Ram9550'
        dockerImage = ''
    }

    stages {
        
         stage('creating  new docker network') {
            steps {
               
                sh 'docker network create lmsnetwork'
            }
        }

        stage('Building the docker image') {
            steps {
                sh 'cd api && docker build -t Ram9550/backend-lms .'
            }
        }
        stage('Logging into dockerhub account') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR Ram9550 --password-stdin dckr_pat_zg7CI4YZoGbnnkIFZeHBnoIv2jI'
            }
        }
        stage('pushing the docker image into dockerhub') {
            steps {
                  sh 'docker push Ram9550/backend-lms'
            }
        }
        stage('Remove old docker images') {
             steps {
                 sh 'docker rmi -f Ram9550/backend-lms'
            }
        }
         stage('creating database container') {
             steps {
                 sh 'docker container rm --force lmsdb'
                 sh 'docker run -d -p 5432:5432 --network lmsnetwork -e  POSTGRES_PASSWORD=password --name lmsdb postgres'
            }
        }
         stage('Running the docker container') {
            steps {
                  sh 'docker container rm --force backend'
                  sh 'docker run -d -p 8080:8080 --network lmsnetwork -e DATABASE_URL=postgresql://postgres:password@lmsdb:5432/postgres --name backend -e PORT=8080 -e MODE=local  Ram9550docker/backend-lms'
            }
        }
    }
}
